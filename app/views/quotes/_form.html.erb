<!-- This will display errors related to both the Quote and its nested Categorizations -->
<% if @quote.errors.any? %>
  <div class="alert alert-danger">
    <ul>
      <% @quote.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
    </ul>
  </div>
<% end %>

<!-- Initiating rendering of a form for the @quote object in QuotesController. Configure form to submit to quotes_path using POST, and using local:true to send data as areg HTTP request. Form is formatted using Bootstrap styling for uniformity and UI design -->
<%= form_with(model: @quote, local: true) do |f| %>
  <!-- Hidden field for user_id, being extracted from session object. -->
  <%= f.hidden_field :user_id, value: current_user.id %>

  <!-- Form fields associated with the quotes table -->
  <div class="form-group" style="padding-bottom: 10px;">
    <%= f.text_area :quote, placeholder: 'Enter the quote', class: 'form-control' %>
  </div>  

  <div class="form-group" style="padding-bottom: 10px;">
    <%= f.number_field :year, placeholder: 'Year of Quote', class: 'form-control' %>
  </div>

  <!--Existing Author Dropdown -->
  <div class="form-group" style="padding-bottom: 10px;">
    <!-- Creating a dropdown list for selecting existing authors -->
    <%= f.label :author_id, "Select Existing Author", class: 'form-label' %>
    <%= f.select :author_id, [["(New author)", ""]] + Author.all.collect {|a| [a.is_anon ? "Anonymous" : "#{a.auth_fname} #{a.auth_lname}", a.id]}, {}, class: 'form-control', id: 'author-select' %>
  </div>

  <!-- New Author Fields -->
  <div id="new-author-fields" style="display: none;">
    <%= f.fields_for :author, @quote.author do |a| %>
      <%= a.hidden_field :id %>
      <div class="row mb-2 author-field">
        <div class="col">
          <%= a.text_field :auth_fname, placeholder: "First Name", class: "form-control" %>
        </div>
        <div class="col">
          <%= a.text_field :auth_lname, placeholder: "Last Name", class: "form-control" %>
        </div>
      </div>
      <div class="row mb-2 author-field">
        <div class="col">
          <%= a.number_field :birth_year, placeholder: "Birth Year", class: "form-control" %>
        </div>
        <div class="col">
          <%= a.number_field :death_year, placeholder: "Death Year", class: "form-control" %>
        </div>
      </div>
      <div class="form-group author-field">
        <%= a.text_area :bio, placeholder: "Short Bio", class: "form-control" %>
      </div>
    <% end %>
  </div>

  <!-- User comment -->
  <div class="form-group" style="padding-bottom: 10px;">
    <%= f.text_area :comment, placeholder: "User comment", class: 'form-control' %>

  <!-- Public Quote -->
  <div class="form-check" style="padding-bottom: 10px;">
    <%= f.label :is_public do %>
    Public
    <%= f.check_box :is_public, class: "form-check-input" %>
    <% end %>
  </div>

  <!-- Container for Quotes Category -->
  <div class="form-group"><label>Select Categories</label>
      <div class="row">
        <% Category.all.each do |category| %>
          <div class="col-md-4">
            <div class="form-check">
              <%= check_box_tag "quote[category_ids][]", category.id, @quote.category_ids.include?(category.id), class: "form-check-input", id:"cat_#{category.id}" %>
              <%= label_tag "cat_#{category.id}", category.cat_name, class: "form-check-label" %>
            </div>
          </div>
        <% end %>
      </div>
  </div>

  <!-- Creating the submit button for the form -->
  <div class="mt-3">
    <%= f.submit 'Create Quote', class: 'btn btn-primary btn-lg' %>
  </div>
<% end %>

<script>
// Wait for document to be fully loaded
document.addEventListener('turbo:load', function() {

  // Get author dropdown and form fields for new author
  const authorSelect = document.getElementById('author-select');
  const newAuthorFields = document.getElementById('new-author-fields');

    function toggleNewAuthor() {
      if (authorSelect.value === "") {
        newAuthorFields.style.display = "block";
      }
      else {
        newAuthorFields.style.display = 'none';
      }
    }

    //run on page load
    toggleNewAuthor();

    //run when dropdown changed
    authorSelect.addEventListener('change', toggleNewAuthor);
  });
</script>
